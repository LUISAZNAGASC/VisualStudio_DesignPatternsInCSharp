namespace VisualStudio_DesignPatternsInCSharp.CreationalDesignPatterns.FactoryDesignPattern.FactoryMethodDesignPattern
{
    using System;

    public sealed class RotationMatrixFourCreatorWithFactoryMethod(in double otherRotationMatrixFourCreatorXOrientationToHandle, in double otherRotationMatrixFourCreatorYOrientationToHandle, in double otherRotationMatrixFourCreatorZOrientationToHandle) : MatrixFourCreatorWithFactoryMethod(otherMatrixFourCreatorXTransformationToHandle: otherRotationMatrixFourCreatorXOrientationToHandle, otherMatrixFourCreatorYTransformationToHandle: otherRotationMatrixFourCreatorYOrientationToHandle, otherMatrixFourCreatorZTransformationToHandle: otherRotationMatrixFourCreatorZOrientationToHandle)
    {
        private const double RotationMatrixFourCreatorDegreesToRadiansConversor = Math.PI / 180.0;

        public override void SetMatrixFourCreatorXTransformationUsing(in double otherRotationMatrixFourCreatorXOrientationToHandle)
        {
            MatrixFourComponentWithFactoryMethod rotationMatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentIdentity();
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelY, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelB, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorXOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelZ, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelB, otherMatrixFourComponentElementToHandle: -Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorXOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelY, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelC, otherMatrixFourComponentElementToHandle: Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorXOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelZ, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelC, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorXOrientationToHandle));

            MatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentMultiplicationUsing(leftMatrixFourComponentToHandle: MatrixFourCreatorMatrixFourComponent, rightMatrixFourComponentToHandle: rotationMatrixFourCreatorMatrixFourComponent);
        }

        public override void SetMatrixFourCreatorYTransformationUsing(in double otherRotationMatrixFourCreatorYOrientationToHandle)
        {
            MatrixFourComponentWithFactoryMethod rotationMatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentIdentity();
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelX, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelA, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorYOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelZ, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelA, otherMatrixFourComponentElementToHandle: Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorYOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelX, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelC, otherMatrixFourComponentElementToHandle: -Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorYOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelZ, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelC, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorYOrientationToHandle));

            MatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentMultiplicationUsing(leftMatrixFourComponentToHandle: MatrixFourCreatorMatrixFourComponent, rightMatrixFourComponentToHandle: rotationMatrixFourCreatorMatrixFourComponent);
        }

        public override void SetMatrixFourCreatorZTransformationUsing(in double otherRotationMatrixFourCreatorZOrientationToHandle)
        {
            MatrixFourComponentWithFactoryMethod rotationMatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentIdentity();
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelX, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelA, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorZOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelY, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelA, otherMatrixFourComponentElementToHandle: -Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorZOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelX, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelB, otherMatrixFourComponentElementToHandle: Math.Sin(a: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorZOrientationToHandle));
            rotationMatrixFourCreatorMatrixFourComponent.SetMatrixFourComponentElementUsing(otherMatrixFourComponentRowLevelToHandle: MatrixFourRowLevelWithFactoryMethod.MatrixFourRowLevelY, otherMatrixFourComponentColumnLevelToHandle: MatrixFourColumnLevelWithFactoryMethod.MatrixFourColumnLevelB, otherMatrixFourComponentElementToHandle: Math.Cos(d: RotationMatrixFourCreatorDegreesToRadiansConversor * otherRotationMatrixFourCreatorZOrientationToHandle));

            MatrixFourCreatorMatrixFourComponent = MatrixFourComponentWithFactoryMethod.GetMatrixFourComponentMultiplicationUsing(leftMatrixFourComponentToHandle: MatrixFourCreatorMatrixFourComponent, rightMatrixFourComponentToHandle: rotationMatrixFourCreatorMatrixFourComponent);
        }
    }
}